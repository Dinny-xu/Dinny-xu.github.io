<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Nginx Build Install</title>
      <link href="2021/08/26/nginx%20build%20install/"/>
      <url>2021/08/26/nginx%20build%20install/</url>
      
        <content type="html"><![CDATA[<h1 id="Nginx-build-install"><a href="#Nginx-build-install" class="headerlink" title="Nginx build install"></a>Nginx build install</h1><h2 id="Ubuntu-安装"><a href="#Ubuntu-安装" class="headerlink" title="Ubuntu 安装"></a>Ubuntu 安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line"><span class="meta">#</span><span class="bash">安装依赖：gcc、g++依赖库</span></span><br><span class="line">sudo apt-get install build-essential libtool</span><br><span class="line"><span class="meta">#</span><span class="bash">安装 pcre依赖库（http://www.pcre.org/）</span></span><br><span class="line">sudo apt-get install libpcre3 libpcre3-dev</span><br><span class="line"><span class="meta">#</span><span class="bash">安装 zlib依赖库（http://www.zlib.net）</span></span><br><span class="line">sudo apt-get install zlib1g-dev</span><br><span class="line"><span class="meta">#</span><span class="bash">安装ssl依赖库</span></span><br><span class="line">sudo apt-get install openssl</span><br></pre></td></tr></table></figure><h4 id="下载Nginx源码"><a href="#下载Nginx源码" class="headerlink" title="下载Nginx源码"></a><a href="https://nginx.org/en/download.html">下载Nginx源码</a></h4><p><img src="https://cdn.xycloud.site/iShot2021-08-26%2009.22.00.png"></p><h4 id="下载-解压-重命名"><a href="#下载-解压-重命名" class="headerlink" title="下载-解压-重命名"></a>下载-解压-重命名</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://nginx.org/download/nginx-1.20.1.tar.gz</span><br><span class="line">tar -xvf nginx-1.20.1.tar.gz</span><br><span class="line">mv nginx-1.20.1.tar.gz  /usr/local/nginx</span><br><span class="line">cd nginx</span><br></pre></td></tr></table></figure><h4 id="进入nginx-目录-执行编译命令"><a href="#进入nginx-目录-执行编译命令" class="headerlink" title="进入nginx 目录 执行编译命令"></a>进入nginx 目录 执行编译命令</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ./configure --prefix=/usr/local/nginx --conf-path=/usr/local/nginx/nginx.conf --with-pcre-jit --with-pcre --with-http_ssl_module --with-http_v2_module --with-http_addition_module --with-http_image_filter_module --with-http_sub_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_auth_request_module --with-http_slice_module --with-http_stub_status_module --with-mail --with-mail_ssl_module --with-http_sub_module --with-stream --with-stream_ssl_module --with-stream_ssl_preread_module</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo make &amp;&amp; make install</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd sbin</span><br><span class="line">sudo ./nginx -t</span><br></pre></td></tr></table></figure><p><img src="https://cdn.xycloud.site/iShot2021-08-26%2010.59.54.png"></p><h4 id="Syntax-is-ok-表示安装成功"><a href="#Syntax-is-ok-表示安装成功" class="headerlink" title="Syntax is ok 表示安装成功"></a>Syntax is ok 表示安装成功</h4><h2 id="Centos-安装"><a href="#Centos-安装" class="headerlink" title="Centos 安装"></a>Centos 安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">安装gcc</span></span><br><span class="line">sudo yum -y install gcc gcc-c++</span><br><span class="line"><span class="meta">#</span><span class="bash">安装pcre</span></span><br><span class="line">sudo yum -y install pcre pcre-devel</span><br><span class="line"><span class="meta">#</span><span class="bash">安装 zlib,zlib 库提供了很多压缩和解压缩的方式</span></span><br><span class="line">sudo yum -y install zlib zlib-devel</span><br><span class="line"><span class="meta">#</span><span class="bash">安装 openssl,安全套接字层密码库，用于通信加密</span></span><br><span class="line">sudo yum -y install openssl openssl-devel</span><br></pre></td></tr></table></figure><h4 id="将下载好的nginx源码进行解压编译"><a href="#将下载好的nginx源码进行解压编译" class="headerlink" title="将下载好的nginx源码进行解压编译"></a>将下载好的nginx源码进行解压编译</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://nginx.org/download/nginx-1.20.1.tar.gz</span><br><span class="line">tar -xvf nginx-1.20.1.tar.gz</span><br><span class="line">mv nginx-1.20.1.tar.gz  /usr/<span class="built_in">local</span>/nginx</span><br><span class="line"><span class="built_in">cd</span> nginx</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ./configure --prefix=/usr/<span class="built_in">local</span>/nginx --conf-path=/usr/<span class="built_in">local</span>/nginx/nginx.conf --with-pcre-jit --with-pcre --with-http_ssl_module --with-http_v2_module --with-http_addition_module --with-http_image_filter_module --with-http_sub_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_auth_request_module --with-http_slice_module --with-http_stub_status_module --with-mail --with-mail_ssl_module --with-http_sub_module --with-stream --with-stream_ssl_module --with-stream_ssl_preread_module</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo make &amp;&amp; make install</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> sbin</span><br><span class="line">sudo ./nginx -t</span><br></pre></td></tr></table></figure><p><a href="http://nginx.org/en/docs/configure.html">参数说明</a></p>]]></content>
      
      
      <categories>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>集群分发</title>
      <link href="2021/07/27/%E9%9B%86%E7%BE%A4%E5%88%86%E5%8F%91/"/>
      <url>2021/07/27/%E9%9B%86%E7%BE%A4%E5%88%86%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<h1 id="集群分发"><a href="#集群分发" class="headerlink" title="集群分发"></a>集群分发</h1><ul><li><p>当我们为了实现某些集群功能时，会自己搭建一个小型集群做测试使用，经常会在某台机器上配置好，然后依次分发到其他机器上。</p></li><li><p>通常使用的是 scp 命令，格式如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r /jdk8 root@hadoop002:/usr/local/</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r /jdk8 root@hadoop003:/usr/local/</span><br></pre></td></tr></table></figure></li><li><p>观察一下这个命令，就会发现这里面很多不足</p><ol><li><p>很多重复的部分</p></li><li><p>通常集群之间的文件位置都是相同的，所以可以不指定具体位置</p></li><li><p>指令太长，希望的是 xsync jdk8，即可自动分发到其他机器上</p></li></ol></li><li><p>有了基本想法，下面我们做一个 shell 脚本来实现</p></li><li><p>scp 与 rsync 的区别</p></li><li><p>scp （secure copy）安全拷贝，可以实现服务器与服务器之间的数据拷贝，基本语法是</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp -r $pdir/$fname $user@hadoop$host:$pdir/$fname</span><br><span class="line">scp -r 文件 用户@host:位置</span><br></pre></td></tr></table></figure></li><li><p>rsync 速度快，可以增量拷贝，避免复制相同的内容和支持符号链接的优点。</p><ul><li><p>基本语法是：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -rvl $pdir/$fname $user@hadoop$host:$pdir/$fname</span><br></pre></td></tr></table></figure></li><li><p>其中三个参数的含义是</p></li></ul></li></ul><table><thead><tr><th align="center">-r</th><th align="left">递归</th></tr></thead><tbody><tr><td align="center">-v</td><td align="left">显示复制过程</td></tr><tr><td align="center">-l</td><td align="left">拷贝符号连接</td></tr></tbody></table><h3 id="ssh-免密登录"><a href="#ssh-免密登录" class="headerlink" title="ssh 免密登录"></a>ssh 免密登录</h3><ul><li><p>通常我们使用 ssh 来远程登录到 linux 机器上，那我们的文件分发也是需要登录到对方服务器上的，不可能每次分发文件都要输入密码，所以需要预先配置好 ssh 免密登录。</p><ol><li>首先需要依次更改主机名字</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Vim   /etc/sysconfig/network</span><br></pre></td></tr></table></figure><ol start="2"><li><p>修改 /etc/hosts 文件，可以通过访问机器名来访问 ip</p></li><li><p>在一台机器上生成公钥和私钥</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><ol start="4"><li><p>一路回车，会在 ~/.ssh 下产生公钥和私钥文件</p></li><li><p>在每台机器上执行 ssh-copy-id 机器名，把公钥发送到其他主机</p></li></ol></li></ul><h4 id="关于ssh免密登录"><a href="#关于ssh免密登录" class="headerlink" title="关于ssh免密登录"></a>关于ssh免密登录</h4><ul><li><p>通常集群分发文件并不会多次操作，建议安全起见不要设置免密，在执行脚本时，只需要根据提示输入密码即可</p><ul><li><p><strong>shell 脚本 for 循环语法</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">for((i=1;i&lt;=10;i++));  </span><br><span class="line">do   </span><br><span class="line">echo $(expr $i \* 3 + 1);  </span><br><span class="line">done</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>脚本实现</strong></p></li><li><p>在 /usr/local/bin 下 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch xsync &amp; vim xsync</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash">1 获取输入参数个数，如果没有参数，直接退出</span></span><br><span class="line">pcount=$#</span><br><span class="line">if((pcount==0)); then</span><br><span class="line">echo no args;</span><br><span class="line">exit;</span><br><span class="line">fi</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">2 获取文件名称</span></span><br><span class="line">p1=$1</span><br><span class="line">fname=`basename $p1`</span><br><span class="line">echo fname=$fname</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">3 获取上级目录到绝对路径</span></span><br><span class="line">pdir=`cd -P $(dirname $p1); pwd`</span><br><span class="line">echo pdir=$pdir</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">4 获取当前用户名称</span></span><br><span class="line">user=`whoami`</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">5 循环</span></span><br><span class="line">for((host=103; host&lt;105; host++)); do</span><br><span class="line">echo ------------------- hadoop$host --------------</span><br><span class="line">        rsync -rvl $pdir/$fname $user@hadoop$host:$pdir</span><br><span class="line">done</span><br><span class="line"><span class="meta">#</span><span class="bash">note:hadoop 修改为自己hosts文件指定的域名</span></span><br></pre></td></tr></table></figure><ul><li><p>给脚本赋予可执行权限，chmod 777 xsync</p></li><li><p>脚本编辑完成后，配置hosts 文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hosts</span><br></pre></td></tr></table></figure></li></ul></li></ul><p><img src="https://cdn.xycloud.site/iShot2021-07-27%2011.47.45.png"></p><ul><li><p>host 指向的ip 就是分发文件的地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/bin</span><br></pre></td></tr></table></figure></li><li><p>执行脚本-将指定目录的文件分发到各个hosts文件指定的服务器上</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./xsync /home/softwore/kafka</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://cdn.xycloud.site/iShot2021-07-27%2011.50.42.png"></p><ul><li>如果你没有配置ssh免密登录，将会提示输入指定服务器的密码</li></ul><ul><li><p>如何获取到待发送文件的文件名和绝对路径？</p><ul><li>basename jdk8，即可获得当前文件的文件名</li></ul></li><li><p>pdir=<code>cd -P $(dirname $p1); pwd</code></p></li><li><p>这条命令是什么意思</p></li><li><p>dirname /opt/module/jdk/，可以获得 jdk8 的绝对路径 /opt/module</p></li><li><p>为何要加一个 cd -P 命令呢？</p></li><li><p>如果我们发送的文件是一个软连接，那么 cd -P 会 cd 到软链接的真实目录下，而不是软链接本身所在的目录，可以考虑到发送的文件是一个软链接的情况</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gooogle Search Skill</title>
      <link href="2021/07/21/Google%20%E6%90%9C%E7%B4%A2%E6%8A%80%E5%B7%A7/"/>
      <url>2021/07/21/Google%20%E6%90%9C%E7%B4%A2%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="Google-搜索技巧"><a href="#Google-搜索技巧" class="headerlink" title="Google 搜索技巧"></a>Google 搜索技巧</h1><p><img src="https://cdn.xycloud.site/iShot2021-07-21%2010.58.27.png"></p><h2 id="site"><a href="#site" class="headerlink" title="site"></a>site</h2><ul><li><p>语法: site</p></li><li><p>作用: 限定在特定的网址中搜索</p></li><li><p>有时候全网搜索有点像大海捞针，而如果我们有特别关心的网站，想只显示这个网站的搜索结果，就可以用到site语法，比如我在微软的官网内搜索漏洞编号CVE-2014-4114：</p></li></ul><p><img src="https://cdn.xycloud.site/iShot2021-07-21%2011.01.42.png"></p><ul><li>可以看到，显示的结果都是在指定网站中的，大大减少了我们在海量信息中的筛选成本。</li></ul><h2 id="filetype"><a href="#filetype" class="headerlink" title="filetype"></a>filetype</h2><ul><li>语法: filetype</li><li>作用: 搜索特定的文件类型</li><li>有时候我们想找特定类型的文档，比如PPT、PDF等，但默认情况下出来的都是网页，很难找到我们想要的内容，这个时候就可以用上filetype语法。比如我想搜索web安全相关的PDF电子书：</li></ul><p><img src="https://cdn.xycloud.site/iShot2021-07-21%2011.04.09.png"></p><ul><li>可以看到所有的文档格式全部是PDF</li></ul><h2 id="inurl"><a href="#inurl" class="headerlink" title="inurl"></a>inurl</h2><ul><li>语法: inurl</li><li>作用: 在URL中搜索出现指定内容的链接</li><li>这一个语法有什么用？普通人很少直接关心链接本身的内容，但是对于咱们hacker来说，URL就重要了，比如我们可以用来搜索可能存在SQL注入的链接：</li></ul>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">inurl: php?id = </span><br><span class="line">inurl: jsp?id = </span><br><span class="line">inurl : asp?id = </span><br></pre></td></tr></table></figure><p><img src="https://cdn.xycloud.site/iShot2021-07-21%2011.11.43.png"></p><ul><li><p>除了SQL注入，还可以搜索可能存在的网站后台管理入口：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">inurl:login.php</span><br><span class="line">inurl:login.jsp</span><br><span class="line">inurl:login.asp</span><br></pre></td></tr></table></figure></li><li><p>如果我们再加上前面的site语法组合使用，就可以找出指定网站的这种链接了，定向寻找攻击点。</p></li></ul><h2 id="intitle"><a href="#intitle" class="headerlink" title="intitle"></a>intitle</h2><ul><li>语法:intitle</li><li>作用:在网页title中搜索出现指定内容的网页</li><li>除了在URL中搜索，咱们还能在标题中搜索。一般网站后台管理页面都会带有“后台”、“管理”、“登录”等字眼，我们可以通过在HTML的title字段位置搜索这些关键词，寻找可疑的后台登录页面</li></ul><p><img src="https://cdn.xycloud.site/iShot2021-07-21%2011.14.35.png"></p><h2 id="intext"><a href="#intext" class="headerlink" title="intext"></a>intext</h2><ul><li><p>语法:intext</p></li><li><p>作用:除了URL和title，剩下的就是正文位置搜索了</p></li><li><p>比如我们搜索使用discuz搭建的论坛网站：</p></li></ul><p><img src="https://cdn.xycloud.site/iShot2021-07-21%2011.16.27.png"></p><ul><li>更多有价值的搜索语句可参考 <a href="https://www.exploit-db.com/google-hacking-database">https://www.exploit-db.com/google-hacking-database</a></li></ul><p><img src="https://cdn.xycloud.site/iShot2021-07-21%2011.18.38.png"></p>]]></content>
      
      
      <categories>
          
          <category> Google </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Google </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RabbitMQ 多源配置</title>
      <link href="2021/06/18/RabbitMQ%20%E5%A4%9A%E6%BA%90%E9%85%8D%E7%BD%AE/"/>
      <url>2021/06/18/RabbitMQ%20%E5%A4%9A%E6%BA%90%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="RabbitMQ-多源配置"><a href="#RabbitMQ-多源配置" class="headerlink" title="RabbitMQ 多源配置"></a>RabbitMQ 多源配置</h2><p>在本地安装RabbitMQ服务或者任意个人服务器安装server</p><h3 id="首先查看服务器版本-根据版本下载对应的MQ"><a href="#首先查看服务器版本-根据版本下载对应的MQ" class="headerlink" title="首先查看服务器版本-根据版本下载对应的MQ"></a>首先查看服务器版本-根据版本下载对应的MQ</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsb_release -a</span><br></pre></td></tr></table></figure><p><a href="https://www.rabbitmq.com/install-rpm.html#overview">查看对应服务器版本MQ以及Erlang OTP/</a></p><p><img src="https://cdn.xycloud.site/iShot2021-08-10%2010.36.33.png"></p><p><a href="https://www.rabbitmq.com/which-erlang.html">RabbitMQ Erlang Version Requirements</a></p><p><img src="https://cdn.xycloud.site/iShot2021-08-10%2010.38.01.png"></p><h4 id="以Centos7为例"><a href="#以Centos7为例" class="headerlink" title="以Centos7为例"></a>以Centos7为例</h4><ul><li><p>系统环境</p><ul><li>JDK1.8</li><li>Centos7-64</li><li>Erlang-OTP 23</li><li>RabbitMQ-3.8.5</li></ul></li></ul><h4 id="安装Erlang"><a href="#安装Erlang" class="headerlink" title="安装Erlang"></a>安装Erlang</h4><ul><li><p>通过rpm 安装Erlang </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -s https://packagecloud.io/install/repositories/rabbitmq/erlang/script.rpm.sh | sudo bash</span><br></pre></td></tr></table></figure></li><li><p>安装Erlang</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y erlang</span><br></pre></td></tr></table></figure></li><li><p>查看erl版本号</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">erl</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://cdn.xycloud.site/iShot2021-06-18%2010.56.23.png"></p><ul><li>Erlang 安装完成</li></ul><h4 id="安装RabbitMQ"><a href="#安装RabbitMQ" class="headerlink" title="安装RabbitMQ"></a>安装RabbitMQ</h4><ul><li>导入key</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm --import https://packagecloud.io/rabbitmq/rabbitmq-server/gpgkey</span><br><span class="line">rpm --import https://packagecloud.io/gpg.key</span><br></pre></td></tr></table></figure><ul><li>设置RabbitMQ 前置条件</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -s https://packagecloud.io/install/repositories/rabbitmq/rabbitmq-server/script.rpm.sh | sudo bash</span><br></pre></td></tr></table></figure><ul><li>下载RabbitMQ </li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/rabbitmq/rabbitmq-server/releases/download/v3.8.5/rabbitmq-server-3.8.5-1.el7.noarch.rpm</span><br></pre></td></tr></table></figure><ul><li>访问链接下载后，将rpm包上传至服务器-导入key</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm --import https://www.rabbitmq.com/rabbitmq-release-signing-key.asc</span><br></pre></td></tr></table></figure><ul><li>安装socat</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install epel-release</span><br><span class="line">yum -y install socat</span><br></pre></td></tr></table></figure><ul><li>安装RabbitMQ rpm 文件</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh rabbitmq-server-3.8.5-1.el7.noarch.rpm</span><br></pre></td></tr></table></figure><ul><li>启用管理平台插件，启用插件后，可以可视化管理RabbitMQ</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rabbitmq-plugins <span class="built_in">enable</span> rabbitmq_management</span><br></pre></td></tr></table></figure><ul><li>启动MQ </li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start rabbitmq-server</span><br></pre></td></tr></table></figure><ul><li>访问控制图形化界面 -&gt; IP:15672</li></ul><p><img src="https://cdn.xycloud.site/iShot2021-06-18%2011.06.28.png"></p><ul><li>MQ 默认账号guest 密码 guest</li><li>创建专属账号进行赋权使用-&gt; 账号:admin 密码:admin</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rabbitmqctl add_user admin admin</span><br></pre></td></tr></table></figure><ul><li>设置admin为超级管理员</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rabbitmqctl set_user_tags admin administrator</span><br></pre></td></tr></table></figure><ul><li>授权远程访问（也可以登录后，可视化配置）</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rabbitmqctl set_permissions -p / admin <span class="string">&quot;.&quot;</span> <span class="string">&quot;.&quot;</span> <span class="string">&quot;.*&quot;</span></span><br></pre></td></tr></table></figure><ul><li>创建完成后，重启RabbitMQ</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart rabbitmq-server</span><br></pre></td></tr></table></figure><h2 id="代码配置"><a href="#代码配置" class="headerlink" title="代码配置"></a>代码配置</h2><h4 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- rabbit mq--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-amqp&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">2.2</span><span class="number">.10</span>.RELEASE&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h4 id="application-yml-配置"><a href="#application-yml-配置" class="headerlink" title="application.yml 配置"></a>application.yml 配置</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8088</span></span><br><span class="line">  <span class="attr">rabbitmq:</span></span><br><span class="line">    <span class="attr">first:</span></span><br><span class="line">      <span class="attr">host:</span> <span class="number">42.156</span><span class="number">.222</span><span class="number">.164</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">5672</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">admin</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">admin</span></span><br><span class="line">        <span class="comment">#消费端配置</span></span><br><span class="line">      <span class="attr">listener:</span></span><br><span class="line">        <span class="attr">simple:</span></span><br><span class="line">          <span class="attr">concurrency:</span> <span class="number">10</span>  <span class="comment">#消费端</span></span><br><span class="line">          <span class="attr">max-concurrency:</span> <span class="number">20</span> <span class="comment">#最大消费端数</span></span><br><span class="line">          <span class="attr">acknowledge-mode:</span> <span class="string">auto</span> <span class="comment">#自动签收auto  手动 manual</span></span><br><span class="line">          <span class="attr">prefetch:</span> <span class="number">1</span> <span class="comment">#限流（海量数据，同时只能过来一条）</span></span><br><span class="line">    <span class="attr">second:</span></span><br><span class="line">      <span class="attr">host:</span> <span class="string">localhost</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">5672</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">admin</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">admin</span></span><br></pre></td></tr></table></figure><h4 id="程序启动类"><a href="#程序启动类" class="headerlink" title="程序启动类"></a>程序启动类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.study;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MqApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(MqApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="RabbitMQ-配置类"><a href="#RabbitMQ-配置类" class="headerlink" title="RabbitMQ 配置类"></a>RabbitMQ 配置类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.study.mq.rabbitmqConfig;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.core.Binding;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.core.BindingBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.core.DirectExchange;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.core.Queue;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.rabbit.config.SimpleRabbitListenerContainerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.rabbit.connection.CachingConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.rabbit.connection.ConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.rabbit.core.RabbitTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.amqp.SimpleRabbitListenerContainerFactoryConfigurer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Primary;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RabbitConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(name = &quot;firstConnectionFactory&quot;)</span></span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ConnectionFactory <span class="title">firstConnectionFactory</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">            <span class="meta">@Value(&quot;$&#123;spring.rabbitmq.first.host&#125;&quot;)</span> String host,</span></span></span><br><span class="line"><span class="params"><span class="function">            <span class="meta">@Value(&quot;$&#123;spring.rabbitmq.first.port&#125;&quot;)</span> <span class="keyword">int</span> port,</span></span></span><br><span class="line"><span class="params"><span class="function">            <span class="meta">@Value(&quot;$&#123;spring.rabbitmq.first.username&#125;&quot;)</span> String username,</span></span></span><br><span class="line"><span class="params"><span class="function">            <span class="meta">@Value(&quot;$&#123;spring.rabbitmq.first.password&#125;&quot;)</span> String password</span></span></span><br><span class="line"><span class="params"><span class="function">    )</span> </span>&#123;</span><br><span class="line">        CachingConnectionFactory connectionFactory = <span class="keyword">new</span> CachingConnectionFactory();</span><br><span class="line">        connectionFactory.setHost(host);</span><br><span class="line">        connectionFactory.setPort(port);</span><br><span class="line">        connectionFactory.setUsername(username);</span><br><span class="line">        connectionFactory.setPassword(password);</span><br><span class="line">        <span class="keyword">return</span> connectionFactory;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(name = &quot;secondConnectionFactory&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ConnectionFactory <span class="title">secondConnectionFactory</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">            <span class="meta">@Value(&quot;$&#123;spring.rabbitmq.second.host&#125;&quot;)</span> String host,</span></span></span><br><span class="line"><span class="params"><span class="function">            <span class="meta">@Value(&quot;$&#123;spring.rabbitmq.second.port&#125;&quot;)</span> <span class="keyword">int</span> port,</span></span></span><br><span class="line"><span class="params"><span class="function">            <span class="meta">@Value(&quot;$&#123;spring.rabbitmq.second.username&#125;&quot;)</span> String username,</span></span></span><br><span class="line"><span class="params"><span class="function">            <span class="meta">@Value(&quot;$&#123;spring.rabbitmq.second.password&#125;&quot;)</span> String password</span></span></span><br><span class="line"><span class="params"><span class="function">    )</span> </span>&#123;</span><br><span class="line">        CachingConnectionFactory connectionFactory = <span class="keyword">new</span> CachingConnectionFactory();</span><br><span class="line">        connectionFactory.setHost(host);</span><br><span class="line">        connectionFactory.setPort(port);</span><br><span class="line">        connectionFactory.setUsername(username);</span><br><span class="line">        connectionFactory.setPassword(password);</span><br><span class="line">        <span class="keyword">return</span> connectionFactory;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(name = &quot;firstRabbitTemplate&quot;)</span></span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RabbitTemplate <span class="title">firstRabbitTemplate</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">            <span class="meta">@Qualifier(&quot;firstConnectionFactory&quot;)</span> ConnectionFactory connectionFactory</span></span></span><br><span class="line"><span class="params"><span class="function">    )</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RabbitTemplate(connectionFactory);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(name = &quot;secondRabbitTemplate&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RabbitTemplate <span class="title">secondRabbitTemplate</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">            <span class="meta">@Qualifier(&quot;secondConnectionFactory&quot;)</span> ConnectionFactory connectionFactory</span></span></span><br><span class="line"><span class="params"><span class="function">    )</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RabbitTemplate(connectionFactory);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(name = &quot;firstFactory&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SimpleRabbitListenerContainerFactory <span class="title">firstFactory</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">            SimpleRabbitListenerContainerFactoryConfigurer configurer,</span></span></span><br><span class="line"><span class="params"><span class="function">            <span class="meta">@Qualifier(&quot;firstConnectionFactory&quot;)</span> ConnectionFactory connectionFactory</span></span></span><br><span class="line"><span class="params"><span class="function">    )</span> </span>&#123;</span><br><span class="line">        SimpleRabbitListenerContainerFactory factory = <span class="keyword">new</span> SimpleRabbitListenerContainerFactory();</span><br><span class="line">        configurer.configure(factory, connectionFactory);</span><br><span class="line">        <span class="keyword">return</span> factory;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(name = &quot;secondFactory&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SimpleRabbitListenerContainerFactory <span class="title">secondFactory</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">            SimpleRabbitListenerContainerFactoryConfigurer configurer,</span></span></span><br><span class="line"><span class="params"><span class="function">            <span class="meta">@Qualifier(&quot;secondConnectionFactory&quot;)</span> ConnectionFactory connectionFactory</span></span></span><br><span class="line"><span class="params"><span class="function">    )</span> </span>&#123;</span><br><span class="line">        SimpleRabbitListenerContainerFactory factory = <span class="keyword">new</span> SimpleRabbitListenerContainerFactory();</span><br><span class="line">        configurer.configure(factory, connectionFactory);</span><br><span class="line">        <span class="keyword">return</span> factory;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="消费者1"><a href="#消费者1" class="headerlink" title="消费者1"></a>消费者1</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.study.mq.Receiver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.json.JSONObject;</span><br><span class="line"><span class="keyword">import</span> cn.hutool.json.JSONUtil;</span><br><span class="line"><span class="keyword">import</span> com.study.mq.web.bean.entity.MqMsg;</span><br><span class="line"><span class="keyword">import</span> com.study.mq.web.mapper.MqMsgMapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.rabbit.annotation.RabbitHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.rabbit.annotation.RabbitListener;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * RabbitMQ中的消费者，接收first RabbitMQ中的队列first的数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Receiver</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> MqMsgMapper mapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RabbitListener(queues = &quot;first&quot;, containerFactory = &quot;firstFactory&quot;)</span></span><br><span class="line">    <span class="meta">@RabbitHandler</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">process</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> JSONObject object = JSONUtil.parseObj(msg);</span><br><span class="line">        <span class="keyword">final</span> String context = object.getStr(<span class="string">&quot;context&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;Receiver : &quot;</span> + context);</span><br><span class="line">        <span class="keyword">final</span> MqMsg mqMsg = <span class="keyword">new</span> MqMsg();</span><br><span class="line">        mqMsg.setContext(context);</span><br><span class="line">        mapper.insert(mqMsg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="消防者2"><a href="#消防者2" class="headerlink" title="消防者2"></a>消防者2</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.study.mq.Receiver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.rabbit.annotation.RabbitHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.rabbit.annotation.RabbitListener;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * RabbitMQ中的消费者，接收second RabbitMQ中的队列second的数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Receiver2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RabbitListener(queues = &quot;second&quot;, containerFactory = &quot;secondFactory&quot;)</span></span><br><span class="line">    <span class="meta">@RabbitHandler</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">process</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Receiver : &quot;</span> + msg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="生产者1"><a href="#生产者1" class="headerlink" title="生产者1"></a>生产者1</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.study.mq.sender;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.map.MapUtil;</span><br><span class="line"><span class="keyword">import</span> cn.hutool.json.JSONUtil;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.rabbit.core.RabbitTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * RabbitMQ中的生产者，发送消息到RabbitMQ中first队列</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FirstSender</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource(name=&quot;firstRabbitTemplate&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> RabbitTemplate firstRabbitTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> HashMap&lt;Object, Object&gt; map = MapUtil.newHashMap();</span><br><span class="line">        map.put(<span class="string">&quot;context&quot;</span>, <span class="string">&quot;一条消息&quot;</span>);</span><br><span class="line">        <span class="keyword">final</span> String msg = JSONUtil.toJsonStr(map);</span><br><span class="line">        <span class="keyword">this</span>.firstRabbitTemplate.convertAndSend(<span class="string">&quot;first&quot;</span>,<span class="string">&quot;firstDirectRouting&quot;</span>, msg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="生产者2"><a href="#生产者2" class="headerlink" title="生产者2"></a>生产者2</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.study.mq.sender;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.rabbit.core.RabbitTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * RabbitMQ中的生产者，发送消息到RabbitMQ中的second队列</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//@Component</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecondSender</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource(name = &quot;secondRabbitTemplate&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> RabbitTemplate secondRabbitTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String context = <span class="string">&quot;第一次发送 &quot;</span> + <span class="keyword">new</span> Date();</span><br><span class="line">        System.out.println(<span class="string">&quot;Sender : &quot;</span> + context);</span><br><span class="line">        <span class="keyword">this</span>.secondRabbitTemplate.convertAndSend(<span class="string">&quot;second&quot;</span>,<span class="string">&quot;secondRoutingKey&quot;</span>, context);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="程序测试"><a href="#程序测试" class="headerlink" title="程序测试"></a>程序测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.study.mq;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.study.mq.sender.FirstSender;</span><br><span class="line"><span class="keyword">import</span> com.study.mq.sender.SecondSender;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> FirstSender firstSender;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> SecondSender secondSender;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/firstSend&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">firstSend</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        firstSender.send1();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/secondSend&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">secondSend</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        secondSender.send1();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>启动项目, 调用 /firstSend 接口向第一个first 源发送一条消息</li></ul><p><img src="https://cdn.xycloud.site/iShot2021-06-18%2011.32.17.png"></p><ul><li>测试项目时先注释消费者 @RabbitListener 监听注解，这样发送消息后不至于被马上消费</li><li>消息发送成功后，再放开@RabbitListener注释，重新启动项目可以查看到消息已被消费</li></ul>]]></content>
      
      
      <categories>
          
          <category> RabbitMQ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RabbitMQ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Resource VS Autowired</title>
      <link href="2021/06/04/@Autowired%20%E4%B8%8E%20@Resource/"/>
      <url>2021/06/04/@Autowired%20%E4%B8%8E%20@Resource/</url>
      
        <content type="html"><![CDATA[<h1 id="Autowired-与-Resource"><a href="#Autowired-与-Resource" class="headerlink" title="@Autowired 与 @Resource"></a>@Autowired 与 @Resource</h1><ul><li>@Autowired和@Resource都可以用于来实现依赖注入，但前者是Spring提供的，后者为JDK（JSR-250标准）自带的。阿里Java开发规范中推荐使用@Resource。但大多数人往往并没有留意为何如此，甚至代码中的提示信息可能都没留意去看。<br>本文就带大家彻底了解一下这两个注解的功能、运用场景及区别。</li></ul><h2 id="IDE的提示"><a href="#IDE的提示" class="headerlink" title="IDE的提示"></a>IDE的提示</h2><ul><li>如果在项目中使用@Autowired进行注入，如下代码：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@RestController</span><br><span class="line">public class InjectController &#123;</span><br><span class="line">    @Autowired</span><br><span class="line">    private ConnectService connectService;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>会有这样的提示信息</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Field injection is not recommended </span><br><span class="line">Inspection info: Spring Team recommends: &quot;Always use constructor based dependency injection in your beans. Always use assertions for mandatory dependencies&quot;.</span><br></pre></td></tr></table></figure><ul><li>翻译过来就是：字段注入是不推荐的，Spring团队建议：“始终在bean中使用基于构造函数的依赖项注入。始终对强制性依赖项使用断言”</li><li>根据提示，我们来重新写一种注入方式</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@RestController</span><br><span class="line">public class InjectController &#123;</span><br><span class="line"></span><br><span class="line">    private ConnectService connectService;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    public void setConnectService(ConnectService connectService) &#123;</span><br><span class="line">        this.connectService = connectService;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>上面将@Autowired的注解使用在了setter方法上，此时提示消失了。再看另外一种注入方式</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@RestController</span><br><span class="line">public class InjectController &#123;</span><br><span class="line"></span><br><span class="line">    private ConnectService connectService;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    public InjectController(ConnectService connectService) &#123;</span><br><span class="line">        this.connectService = connectService;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>此种方式将@Autowired的注解使用在了构造方法上，与Spring团队的建议一致。此时，也不会再出现警告信息。</li><li>也就是说IDE提示的信息并不是说不建议大家使用@Autowired注解，而且不要直接使用在字段（Field）上。</li></ul><h2 id="Spring注入的方式及场景"><a href="#Spring注入的方式及场景" class="headerlink" title="Spring注入的方式及场景"></a>Spring注入的方式及场景</h2><ul><li>Spring常见的DI方式：构造器注入、Setter注入、字段注入。显然，我们经常使用的方式并不是官方最推荐的。</li><li>而上面三种注入方式所适用的场景也是有所区别的：1、构造器注入适用于具有强依赖和不变性的依赖；2、Setter注入适用于具有可选性和可变性的依赖注入；3、Field注入，尽量少使用，如果需要则使用@Resource进行替代，以降低耦合性。</li></ul><h2 id="Field注入的缺点"><a href="#Field注入的缺点" class="headerlink" title="Field注入的缺点"></a>Field注入的缺点</h2><ul><li>Field注入的缺点很明显，比如不能像构造器注入那样注入不可变的对象，依赖对外部不可见（构造器和Setter可见，而private的属性不可见），会导致组件与IoC容器（比如Spring）紧密耦合，单元测试也需要使用IoC容器，依赖过多时相对构造器注入不能够明显的看出依赖过多（违反单一职责原则）。</li><li>既然Field注入这么多缺点，但为什么大家还是习惯使用呢？主要原因：太方便了，极大的缩减了代码。而且大多数业务并不需要用构造器强绑定，同时换IoC容器的可能性也极低。所以，虽然官方及IDE一直强调和提醒，但貌似并没有阻止程序员的使用</li></ul><h2 id="为什么只对-Autowired警告"><a href="#为什么只对-Autowired警告" class="headerlink" title="为什么只对@Autowired警告"></a>为什么只对@Autowired警告</h2><ul><li>最主要的原因是：@Autowired是Spring提供的，是特定IoC提供的特定注解，与框架形成了强绑定，一旦换用其他IoC框架，是无法支持注入的。而@Resource是JSR-250提供的，IoC容器应当去兼容它，即使更换容器，也可以正常工作。</li><li>另外可能还跟这两种注解的工作机制有关。默认情况下@Autowired是以类型（ByType）进行匹配的，@Resource是以名字（ByName）进行匹配的。也就是说当容器中存在两个相同类型的Bean时，使用@Autowired注入会报错，而使用@Resource会更精准。当然@Autowired也可以指定名称（还需配合@Qualifier注解）</li></ul><h2 id="Autowired和-Resource功能"><a href="#Autowired和-Resource功能" class="headerlink" title="@Autowired和@Resource功能"></a>@Autowired和@Resource功能</h2><ul><li>就Spring而言，不但支持自定义的@Autowired注解，还支持几个由JSR-250规范定义的注解，分别为@Resource、@PostConstruct以及@PreDestroy。</li><li>而@Autowired和@Resource的功能基本一致，@Resource的作用相当于@Autowired，只不过@Autowired默认按byType自动注入，而@Resource默认按byName自动注入</li><li>@Resource有两个核心属性：name和type。Spring将@Resource注解的name属性解析为bean的名字，type属性则解析为bean的类型。默认情况下会通过反射机制使用byName自动注入策略。</li></ul><p>###@Resource装配场景：</p><ol><li>如果同时指定了name和type，则从Spring上下文中找到唯一匹配的bean进行装配，找不到则抛出异常；</li><li>如果指定了name，则根据名称进行装配，找不到则抛出异常；</li><li>如果指定了type，则根据类型进行装配，找不到或者找到多个，都会抛出异常；</li><li>没有任何指定（默认情况），则采用byName方式进行装配，如果没有匹配到，则回退为一个原始类型进行匹配；</li></ol><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li>@Autowired为IOC提供的特定注解，与框架行程了强绑定，使用其它IOC框架则无法使用，涉及到后期代码维护困难</li><li>注入类型不同，@Autowired默认使用byType自动注入，@Resource默认使用byName自动注入，后者更加精准</li><li>从开发角度分析，使用@Resource更加符合标准,兼容性强于@Autowired</li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker build Java Project</title>
      <link href="2021/06/04/Docker-build-Java-Project/"/>
      <url>2021/06/04/Docker-build-Java-Project/</url>
      
        <content type="html"><![CDATA[<h1 id="使用Docker-运行jar-文件"><a href="#使用Docker-运行jar-文件" class="headerlink" title="使用Docker 运行jar 文件"></a>使用Docker 运行jar 文件</h1><ul><li>使用Java镜像直接运行</li><li>切换root用户，在/etc/docker 目录下创建daemon.json文件，添加镜像源</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;registry-mirrors&quot;: [&quot;https://almtd3fa.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>重启docker </li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl docker restart</span><br></pre></td></tr></table></figure><h2 id="拉取Java镜像"><a href="#拉取Java镜像" class="headerlink" title="拉取Java镜像"></a>拉取Java镜像</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull java-jdk:8</span><br></pre></td></tr></table></figure><ul><li>运行Jar文件</li><li>将jar 包放入个人指定的目录，例如：/project/demo</li><li>执行命令生成容器启动jar</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 8080:8083 -v /project/demo:project/demo --name demo java:8-jdk java -jar /project/demo/demo.jar</span><br></pre></td></tr></table></figure><ul><li>-d :后台运行</li><li>-p :端口映射</li><li>-v :/project/demo:/project/demo:将宿主机的路径映射到容器中</li><li>-name :定义生成容器的名称</li></ul><h2 id="利用Docker创建镜像运行jar-文件"><a href="#利用Docker创建镜像运行jar-文件" class="headerlink" title="利用Docker创建镜像运行jar 文件"></a>利用Docker创建镜像运行jar 文件</h2><ul><li>上传jar包到指定的目录</li><li>在该目录下创建Dockerfile文件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi Dockerfile</span><br></pre></td></tr></table></figure><ul><li>将下面内容复制到Dockerfile中</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">FROM java:8</span><br><span class="line">MAINTAINER dinny-xu</span><br><span class="line">ADD docker-demo.jar  demo.jar</span><br><span class="line">COPY config config</span><br><span class="line">EXPOSE 9000</span><br><span class="line">ENTRYPOINT [&quot;java&quot;, &quot;-jar&quot;, &quot;demo.jar&quot;]</span><br></pre></td></tr></table></figure><ul><li>FROM:基础镜像，基于jdk8镜像开始</li><li>MAINTAINER:作者</li><li>ADD:将jar文件添加(复制)到镜像内，docker-demo.jar源文件，demo.jar复制得到的文件</li><li>COPY:将应用的配置文件拷贝到镜像中</li><li>EXPOSE:声明端口</li><li>ENTRYPOINT:docker启动时，运行的命令，这里容器启动时直接运行jar服务</li></ul><h2 id="创建好Dockerfile文件之后，执行命令-构建镜像"><a href="#创建好Dockerfile文件之后，执行命令-构建镜像" class="headerlink" title="创建好Dockerfile文件之后，执行命令 构建镜像"></a>创建好Dockerfile文件之后，执行命令 构建镜像</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t demo:test .</span><br></pre></td></tr></table></figure><ul><li>demo:镜像名称</li><li>tets:镜像的tag，如果不写默认latest</li><li>. :这个 . 一定不能忘记，最后的. 代表本次执行的上下文路径，ADD docker-demo.jar demo.jar ，中间的docker-demo.jar在哪里，就是根据这个 . 确定的，在上述Dockerfile，表示将当前文件夹下的docker-demo.jar和config 文件添加到容器中</li><li>镜像构建成功后可查看镜像</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><h3 id="运行镜像"><a href="#运行镜像" class="headerlink" title="运行镜像"></a>运行镜像</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name demo-test -p 9000:9000 -v /project/demo:/project/demo demo:test</span><br></pre></td></tr></table></figure><ul><li>查看服务是否启动成功</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><ul><li>根据容器CONTAINER ID 查看服务日志<ul><li>1000 表示查看最后1000行</li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs -f --tail 1000 &lt;容器ID&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot 瘦身部署</title>
      <link href="2021/06/04/SpringBoot-%E7%98%A6%E8%BA%AB%E9%83%A8%E7%BD%B2/"/>
      <url>2021/06/04/SpringBoot-%E7%98%A6%E8%BA%AB%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="SpringBoot-项目jar-包瘦身部署"><a href="#SpringBoot-项目jar-包瘦身部署" class="headerlink" title="SpringBoot 项目jar 包瘦身部署"></a>SpringBoot 项目jar 包瘦身部署</h1><h4 id="在pom中引入依赖"><a href="#在pom中引入依赖" class="headerlink" title="在pom中引入依赖"></a>在pom中引入依赖</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">&lt;build&gt;</span><br><span class="line">       &lt;finalName&gt;poney&lt;/finalName&gt;</span><br><span class="line">       &lt;plugins&gt;</span><br><span class="line">           &lt;plugin&gt;</span><br><span class="line">               &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">               &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">               &lt;dependencies&gt;</span><br><span class="line">                   &lt;dependency&gt;</span><br><span class="line">                       &lt;groupId&gt;org.springframework.boot.experimental&lt;/groupId&gt;</span><br><span class="line">                       &lt;artifactId&gt;spring-boot-thin-layout&lt;/artifactId&gt;</span><br><span class="line">                       &lt;version&gt;1.0.25.RELEASE&lt;/version&gt;</span><br><span class="line">                   &lt;/dependency&gt;</span><br><span class="line">               &lt;/dependencies&gt;</span><br><span class="line">               &lt;configuration&gt;</span><br><span class="line">                   &lt;executable&gt;true&lt;/executable&gt;</span><br><span class="line">                   &lt;mainClass&gt;com.sipingsoft.gzxf.PoneyGzxfPortalApplication&lt;/mainClass&gt;</span><br><span class="line">               &lt;/configuration&gt;</span><br><span class="line">               &lt;executions&gt;</span><br><span class="line">                   &lt;execution&gt;</span><br><span class="line">                       &lt;goals&gt;</span><br><span class="line">                           &lt;goal&gt;repackage&lt;/goal&gt;</span><br><span class="line">                       &lt;/goals&gt;</span><br><span class="line">                   &lt;/execution&gt;</span><br><span class="line">               &lt;/executions&gt;</span><br><span class="line">           &lt;/plugin&gt;</span><br><span class="line"></span><br><span class="line">           &lt;plugin&gt;</span><br><span class="line">               &lt;groupId&gt;org.springframework.boot.experimental&lt;/groupId&gt;</span><br><span class="line">               &lt;artifactId&gt;spring-boot-thin-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">               &lt;version&gt;1.0.25.RELEASE&lt;/version&gt;</span><br><span class="line">               &lt;executions&gt;</span><br><span class="line">                   &lt;execution&gt;</span><br><span class="line">                       &lt;!-- Download the dependencies at build time --&gt;</span><br><span class="line">                       &lt;id&gt;resolve&lt;/id&gt;</span><br><span class="line">                       &lt;goals&gt;</span><br><span class="line">                           &lt;goal&gt;resolve&lt;/goal&gt;</span><br><span class="line">                       &lt;/goals&gt;</span><br><span class="line">                       &lt;inherited&gt;false&lt;/inherited&gt;</span><br><span class="line">                   &lt;/execution&gt;</span><br><span class="line">               &lt;/executions&gt;</span><br><span class="line">           &lt;/plugin&gt;</span><br><span class="line">           &lt;plugin&gt;</span><br><span class="line">               &lt;artifactId&gt;maven-antrun-plugin&lt;/artifactId&gt;</span><br><span class="line">               &lt;executions&gt;</span><br><span class="line">                   &lt;execution&gt;</span><br><span class="line">                       &lt;phase&gt;compile&lt;/phase&gt;</span><br><span class="line">                       &lt;goals&gt;</span><br><span class="line">                           &lt;goal&gt;run&lt;/goal&gt;</span><br><span class="line">                       &lt;/goals&gt;</span><br><span class="line">                       &lt;configuration&gt;</span><br><span class="line">                           &lt;tasks&gt;</span><br><span class="line">                               &lt;move file=&quot;$&#123;project.build.directory&#125;/classes/application.yml&quot;</span><br><span class="line">                                     todir=&quot;$&#123;project.build.directory&#125;/thin/root/config&quot;/&gt;</span><br><span class="line">                               &lt;move file=&quot;$&#123;project.build.directory&#125;/classes/application-dev.yml&quot;</span><br><span class="line">                                     todir=&quot;$&#123;project.build.directory&#125;/thin/root/config&quot;/&gt;</span><br><span class="line">                               &lt;move file=&quot;$&#123;project.build.directory&#125;/classes/application-prod.yml&quot;</span><br><span class="line">                                     todir=&quot;$&#123;project.build.directory&#125;/thin/root/config&quot;/&gt;</span><br><span class="line">                           &lt;/tasks&gt;</span><br><span class="line">                       &lt;/configuration&gt;</span><br><span class="line">                   &lt;/execution&gt;</span><br><span class="line">               &lt;/executions&gt;</span><br><span class="line">           &lt;/plugin&gt;</span><br><span class="line">       &lt;/plugins&gt;</span><br><span class="line">   &lt;/build&gt;</span><br></pre></td></tr></table></figure><h4 id="第一次加载依赖需要将下面两个重新下载，以防依赖没有下载成功"><a href="#第一次加载依赖需要将下面两个重新下载，以防依赖没有下载成功" class="headerlink" title="第一次加载依赖需要将下面两个重新下载，以防依赖没有下载成功"></a>第一次加载依赖需要将下面两个重新下载，以防依赖没有下载成功</h4><ul><li><p>将下面框中依赖加入dependencies<br><img src="https://cdn.xycloud.site/WX20201202-144438.png"></p></li><li><p>刷新maven即可删除<br><img src="https://cdn.xycloud.site/WX20201202-145004.png"></p></li><li><p>打包之后在thin/root 目录下有3个文件</p></li><li><p>config: 配置文件</p></li><li><p>repository: 所有依赖</p></li><li><p>.jar : 压缩分离的jar包<br><img src="https://cdn.xycloud.site/WX20201202-145129.png"></p></li></ul><h4 id="部署项目"><a href="#部署项目" class="headerlink" title="部署项目"></a>部署项目</h4><ul><li>将root目录压缩到服务器任意目录</li><li>解压root目录,使用命令行测试jar包是否能成功启动</li><li>cmd 进入root目录 执行以下命令</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java &quot;-Dthin.root=.&quot; &quot;-Dthin.offline=true&quot; -jar poney.jar</span><br></pre></td></tr></table></figure><ul><li>第一次加载需要等待几秒</li><li>如果项目报错显示循环引用，请注释代码中swagger<br><img src="https://cdn.xycloud.site/WX20201202-145644.png"></li></ul>]]></content>
      
      
      <categories>
          
          <category> SrpingBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA Build Docker</title>
      <link href="2021/06/04/IDEA-Build-Docker/"/>
      <url>2021/06/04/IDEA-Build-Docker/</url>
      
        <content type="html"><![CDATA[<h1 id="IDEA远程连接Dcoker部署（附ssl连接加密）"><a href="#IDEA远程连接Dcoker部署（附ssl连接加密）" class="headerlink" title="IDEA远程连接Dcoker部署（附ssl连接加密）"></a>IDEA远程连接Dcoker部署（附ssl连接加密）</h1><h2 id="使用ssh工具连接服务器"><a href="#使用ssh工具连接服务器" class="headerlink" title="使用ssh工具连接服务器"></a>使用ssh工具连接服务器</h2><h4 id="先在-usr-local目录下创建个文件夹-这里取名叫ca-然后进入ca文件夹中"><a href="#先在-usr-local目录下创建个文件夹-这里取名叫ca-然后进入ca文件夹中" class="headerlink" title="先在/usr/local目录下创建个文件夹,这里取名叫ca,然后进入ca文件夹中"></a>先在/usr/local目录下创建个文件夹,这里取名叫ca,然后进入ca文件夹中</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/local/ca</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/ca</span><br></pre></td></tr></table></figure><h4 id="创建一个key-需要输入密码和确认密码，请记住这个密码"><a href="#创建一个key-需要输入密码和确认密码，请记住这个密码" class="headerlink" title="创建一个key ,需要输入密码和确认密码，请记住这个密码"></a>创建一个key ,需要输入密码和确认密码，请记住这个密码</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -aes256 -out ca-key.pem 4096</span><br></pre></td></tr></table></figure><h4 id="根据提示分别输入国家-省份-城市-组织-等一系列信息-可以随便输-无所谓的其实"><a href="#根据提示分别输入国家-省份-城市-组织-等一系列信息-可以随便输-无所谓的其实" class="headerlink" title="根据提示分别输入国家,省份,城市,组织,等一系列信息(可以随便输,无所谓的其实)"></a>根据提示分别输入国家,省份,城市,组织,等一系列信息(可以随便输,无所谓的其实)</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -new -x509 -days 365 -key ca-key.pem -sha256 -out ca.pem</span><br></pre></td></tr></table></figure><ul><li>你可以乱填，或者参考如下的填法</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Country Name (2 letter code) [XX]:CN</span><br><span class="line">State or Province Name (full name) []:Hangzhou, Zhejiang Province</span><br><span class="line">Locality Name (eg, city) [Default City]:XIACHENG</span><br><span class="line">Organization Name (eg, company) [Default Company Ltd]:WRETCHANT.COM</span><br><span class="line">Organizational Unit Name (eg, section) []:ONLINE ZUOZUO</span><br><span class="line">Common Name (eg, your name or your server&#x27;s hostname) []:wracaca</span><br></pre></td></tr></table></figure><h4 id="生成server-key-pem-输入下面命令敲回车即可"><a href="#生成server-key-pem-输入下面命令敲回车即可" class="headerlink" title="生成server-key.pem,输入下面命令敲回车即可."></a>生成server-key.pem,输入下面命令敲回车即可.</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -out server-key.pem 4096</span><br></pre></td></tr></table></figure><h4 id="绑定IP或者域名"><a href="#绑定IP或者域名" class="headerlink" title="绑定IP或者域名"></a>绑定IP或者域名</h4><ul><li>把下面的$Host换成你自己服务器外网的IP或者域名:比如:openssl req -subj “/CN=192.168.1.0” -sha256…</li><li>或:openssl req -subj “/CN=<a href="http://www.xycloud.com”/">www.xycloud.com”</a> -sha256…(这么做前提是你有域名,该域名DNS解析后指向你的服务器)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -subj &quot;/CN=$HOST&quot; -sha256 -new -key server-key.pem -out server.csr</span><br></pre></td></tr></table></figure><h4 id="配置白名单"><a href="#配置白名单" class="headerlink" title="配置白名单"></a>配置白名单</h4><ul><li>接下来要允许哪些ip可以连接到服务器的docker,因为已经是ssl连接,所以我推荐配置0.0.0.0,也就是所有Ip都可以连接(但只有拥有证书的才可以连接成功),这样配置好之后公司其他人也可以使用.如果你不想这样,那你可以配置Ip,用逗号分隔开.下面的$Host依旧是你服务器外网的IP或者域名,请自行替换.（这里如果你使用的是服务器Ip的话,请将前面的DNS换成IP,否则配下来连接还是不会成功,如果你使用的是服务器域名,那么就用DNS就可以了)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo subjectAltName = DNS:$HOST,IP:0.0.0.0 &gt;&gt; extfile.cnf</span><br></pre></td></tr></table></figure><h4 id="生成ca-key"><a href="#生成ca-key" class="headerlink" title="生成ca-key"></a>生成ca-key</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo extendedKeyUsage = serverAuth &gt;&gt; extfile.cnf</span><br></pre></td></tr></table></figure><h4 id="执行下面语句-然后输入前面设置过的密码-用以生成ca-key"><a href="#执行下面语句-然后输入前面设置过的密码-用以生成ca-key" class="headerlink" title="执行下面语句,然后输入前面设置过的密码,用以生成ca-key."></a>执行下面语句,然后输入前面设置过的密码,用以生成ca-key.</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -req -days 365 -sha256 -in server.csr -CA ca.pem -CAkey ca-key.pem \-CAcreateserial -out server-cert.pem -extfile extfile.cnf</span><br></pre></td></tr></table></figure><h4 id="生成客户端所需的key-pem-依旧在该服务器下执行下面命令-到时候把生成好的几个公钥私钥拷出去即可"><a href="#生成客户端所需的key-pem-依旧在该服务器下执行下面命令-到时候把生成好的几个公钥私钥拷出去即可" class="headerlink" title="生成客户端所需的key.pem,依旧在该服务器下执行下面命令,到时候把生成好的几个公钥私钥拷出去即可."></a>生成客户端所需的key.pem,依旧在该服务器下执行下面命令,到时候把生成好的几个公钥私钥拷出去即可.</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -out key.pem 4096</span><br></pre></td></tr></table></figure><h4 id="执行下面命令"><a href="#执行下面命令" class="headerlink" title="执行下面命令"></a>执行下面命令</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -subj &#x27;/CN=client&#x27; -new -key key.pem -out client.csr</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo extendedKeyUsage = clientAuth &gt;&gt; extfile.cnf</span><br></pre></td></tr></table></figure><h4 id="生成cert-pem-需要输入前面设置的密码"><a href="#生成cert-pem-需要输入前面设置的密码" class="headerlink" title="生成cert.pem,需要输入前面设置的密码"></a>生成cert.pem,需要输入前面设置的密码</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -req -days 365 -sha256 -in client.csr -CA ca.pem -CAkey ca-key.pem \-CAcreateserial -out cert.pem -extfile extfile.cnf</span><br></pre></td></tr></table></figure><h4 id="修改权限"><a href="#修改权限" class="headerlink" title="修改权限"></a>修改权限</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod -v 0400 ca-key.pem key.pem server-key.pem</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod -v 0444 ca.pem server-cert.pem cert.pem</span><br></pre></td></tr></table></figure><h4 id="把证书复制过去"><a href="#把证书复制过去" class="headerlink" title="把证书复制过去"></a>把证书复制过去</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp server-*.pem  /etc/docker/</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp ca.pem /etc/docker/</span><br></pre></td></tr></table></figure><h4 id="修改docker配置"><a href="#修改docker配置" class="headerlink" title="修改docker配置:"></a>修改docker配置:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /lib/systemd/system/docker.service</span><br></pre></td></tr></table></figure><ul><li>将ExecStart=/usr/bin/dockerd</li><li>替换为:</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ExecStart=/usr/bin/dockerd --tlsverify --tlscacert=/etc/docker/ca.pem --tlscert=/etc/docker/server-cert.pem --tlskey=/etc/docker/server-key.pem -H tcp://0.0.0.0:2375 -H unix://var/run/docker.sock</span><br></pre></td></tr></table></figure><h4 id="重启docker"><a href="#重启docker" class="headerlink" title="重启docker"></a>重启docker</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart-docker</span><br></pre></td></tr></table></figure><h4 id="开放2375端口"><a href="#开放2375端口" class="headerlink" title="开放2375端口"></a>开放2375端口</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/sbin/iptables -I INPUT -p tcp --dport 2376 -j ACCEPT</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables-save</span><br></pre></td></tr></table></figure><h4 id="重启docker-1"><a href="#重启docker-1" class="headerlink" title="重启docker"></a>重启docker</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service docker restart</span><br></pre></td></tr></table></figure><h4 id="查看文件"><a href="#查看文件" class="headerlink" title="查看文件"></a>查看文件</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll</span><br></pre></td></tr></table></figure><p><img src="https://cdn.xycloud.site/iShot2020-12-18%2009.38.09.png"></p><h4 id="通过SFTP工具将3个文件下载到本地任何目录"><a href="#通过SFTP工具将3个文件下载到本地任何目录" class="headerlink" title="通过SFTP工具将3个文件下载到本地任何目录"></a>通过SFTP工具将3个文件下载到本地任何目录</h4><ul><li><p>使用IDEA的docker插件进行连接<br><img src="https://cdn.xycloud.site/iShot2020-12-18%2009.41.39.png"></p></li><li><p>至此IDEA远程Docker 连接加密就完成了</p></li><li><p>思考：为什么需要加密？</p></li><li><p>试想：如果别人知道你的IP，并且知道你对应的端口，即可使用IDEA连接你的Docker进行操作</p></li><li><p>配置ssl加密后，如果对方没有证书，是无法用过远程连接你的Docker的</p><h4 id="IDEA-连接Docker后部署项目"><a href="#IDEA-连接Docker后部署项目" class="headerlink" title="IDEA 连接Docker后部署项目"></a>IDEA 连接Docker后部署项目</h4></li><li><p>创建一个Dockerfile文件，与项目pom.xml同级目录<br><img src="https://cdn.xycloud.site/iShot2020-12-18%2009.46.20.png"></p></li><li><p>选择Edit Configuratinos..<br><img src="https://cdn.xycloud.site/iShot2020-12-18%2009.48.18.png"></p></li><li><p>添加Dockerfile 选项<br><img src="https://cdn.xycloud.site/iShot2020-12-18%2009.49.37.png"></p></li><li><p>配置镜像与容器<br><img src="https://cdn.xycloud.site/iShot2020-12-18%2009.51.37.png"></p></li><li><p>Name: 随便起</p></li><li><p>Dockerfile: 选择刚刚创建的Dockerfile</p></li><li><p>image tag: 镜像名称</p></li><li><p>Container name: 容器名称</p></li><li><p>Bind ports: 外部访问端口:容器端口</p></li></ul><h4 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h4><p><img src="https://cdn.xycloud.site/iShot2020-12-18%2010.00.27.png"></p><ul><li>需要查看启动日志</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 8085:8085 -t 镜像ID --name demo</span><br></pre></td></tr></table></figure><ul><li>不查看启动日志</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 8085:8085 -t 镜像ID --name demo</span><br></pre></td></tr></table></figure><ul><li>启动成功后即可访问IP:端口</li></ul>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos Install MySQL</title>
      <link href="2021/06/04/Centos-Install-MySQL/"/>
      <url>2021/06/04/Centos-Install-MySQL/</url>
      
        <content type="html"><![CDATA[<h1 id="Centos-解压安装MySQL"><a href="#Centos-解压安装MySQL" class="headerlink" title="Centos 解压安装MySQL"></a>Centos 解压安装MySQL</h1><p><strong>获取下载地址</strong></p><p><a href="https://mirrors.huaweicloud.com/mysql/Downloads/MySQL-8.0/">https://mirrors.huaweicloud.com/mysql/Downloads/MySQL-8.0/</a></p><ul><li>全局页面搜索 Ctrl + F 右键复制链接</li></ul><p><img src="https://cdn.xycloud.site/iShot2021-02-05%2017.03.19.png"></p><p><strong>wget 粘贴链接</strong> </p><p><strong>查看已有MySQL 服务</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep mysql</span><br></pre></td></tr></table></figure><p><strong>卸载旧版MySQL</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -e --nodeps mysql-xxx</span><br></pre></td></tr></table></figure><p><img src="https://cdn.xycloud.site/iShot2021-02-05%2017.07.05.png"></p><p><strong>解压MySQL</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf mysql-8.0.22-el7-x86_64.tar -C /user/local </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv mysql-8.0.22 mysql</span><br></pre></td></tr></table></figure><p><strong>创建数据目录及配置文件</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[client]</span><br><span class="line">port=3306</span><br><span class="line">socket=/tmp/mysql/mysql.sock</span><br><span class="line">[mysql]</span><br><span class="line">default-character-set=utf8</span><br><span class="line">[mysqld]</span><br><span class="line">port=3306</span><br><span class="line">user=mysql</span><br><span class="line">datadir=/usr/local/mysql/data</span><br><span class="line">basedir=/usr/local/mysql</span><br><span class="line">socket=/tmp/mysql/mysql.sock</span><br><span class="line">max_connections=200</span><br><span class="line">character-set-server=utf8</span><br><span class="line">default-storage-engine=INNODB</span><br><span class="line">lower_case_table_names=1</span><br><span class="line">sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /usr/local/mysql/data</span><br></pre></td></tr></table></figure><p><strong>创建用户及用户组和创建临时目录文件</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">groupadd mysql</span><br><span class="line">useradd -g mysql mysql</span><br><span class="line">mkdir /tmp/mysql</span><br><span class="line">chown -R mysql:mysql /tmp/mysql</span><br></pre></td></tr></table></figure><p><strong>初始化数据库</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/mysql/bin</span><br></pre></td></tr></table></figure><h4 id="初始化一个不带密码的root用户"><a href="#初始化一个不带密码的root用户" class="headerlink" title="初始化一个不带密码的root用户"></a>初始化一个不带密码的root用户</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./mysqld --initialize-insecure --user=mysql --basedir=/usr/local/mysql/ --datadir=/usr/local/mysql/data/</span><br></pre></td></tr></table></figure><p><strong>配置mysql环境变量</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure><p> <strong>在末尾追加一下内容</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> MYSQL_HOME=/usr/<span class="built_in">local</span>/mysql</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$MYSQL_HOME</span>/lib:<span class="variable">$MYSQL_HOME</span>/bin</span><br></pre></td></tr></table></figure><p><strong>重新加载配置文件</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><p><strong>添加mysql服务及开机启动项</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/<span class="built_in">local</span>/mysql/support-files/mysql.service /etc/init.d/mysql</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /etc/init.d/mysql</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig --add mysql</span><br></pre></td></tr></table></figure><p> <strong>可输入chkconfig –list查看启动项服务</strong></p><p><strong>管理mysql服务</strong></p><ul><li>启动</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysql start</span><br></pre></td></tr></table></figure><ul><li>重启</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysql restart</span><br></pre></td></tr></table></figure><ul><li>停止</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysql stop</span><br></pre></td></tr></table></figure><p><strong>登录mysql并设置远程访问</strong></p><ul><li><p>mysql -uroot -p # 没有密码直接登录</p></li><li><p>使用mysql数据库 user mysql;</p></li><li><p>修改root用户密码</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;password&#x27;;</span><br></pre></td></tr></table></figure><ul><li>添加远程访问权限：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update user set host = &#x27;%&#x27; where user = &#x27;root&#x27;;</span><br></pre></td></tr></table></figure><ul><li>刷新访问权限</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Centos </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows 64安装MySQL 8.0+</title>
      <link href="2021/06/04/Windows-64%E5%AE%89%E8%A3%85MySQL-8.0+/"/>
      <url>2021/06/04/Windows-64%E5%AE%89%E8%A3%85MySQL-8.0+/</url>
      
        <content type="html"><![CDATA[<h1 id="Windowns-64位安装-MySQL-8-0"><a href="#Windowns-64位安装-MySQL-8-0" class="headerlink" title="Windowns 64位安装 MySQL 8.0+"></a>Windowns 64位安装 MySQL 8.0+</h1><h4 id="官网下载对应的MySQL-版本"><a href="#官网下载对应的MySQL-版本" class="headerlink" title="官网下载对应的MySQL 版本"></a>官网下载对应的MySQL 版本</h4><p><a href="https://dev.mysql.com/downloads/mysql/">https://dev.mysql.com/downloads/mysql/</a></p><p><img src="https://cdn.xycloud.site/iShot2021-02-20%2014.12.03.png"></p><h4 id="将下载的压缩包进行解压"><a href="#将下载的压缩包进行解压" class="headerlink" title="将下载的压缩包进行解压"></a>将下载的压缩包进行解压</h4><p><img src="https://cdn.xycloud.site/iShot2021-02-20%2014.15.27.png"></p><h4 id="配置初始化的my-ini文件的文件"><a href="#配置初始化的my-ini文件的文件" class="headerlink" title="配置初始化的my.ini文件的文件"></a>配置初始化的my.ini文件的文件</h4><p><strong>解压后的目录并没有的my.ini文件，没关系可以自行创建在安装根目录下添加的my.ini（新建文本文件，将文件类型改为的.ini），写入基本配置</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"># 设置3306端口</span><br><span class="line">port=3306</span><br><span class="line"># 设置mysql的安装目录</span><br><span class="line">basedir=C:\Program Files\MySQL</span><br><span class="line"># 设置mysql数据库的数据的存放目录</span><br><span class="line">datadir=C:\Program Files\MySQL\Data</span><br><span class="line"># 允许最大连接数</span><br><span class="line">max_connections=200</span><br><span class="line"># 允许连接失败的次数。</span><br><span class="line">max_connect_errors=10</span><br><span class="line"># 服务端使用的字符集默认为utf8mb4</span><br><span class="line">character-set-server=utf8mb4</span><br><span class="line"># 创建新表时将使用的默认存储引擎</span><br><span class="line">default-storage-engine=INNODB</span><br><span class="line"># 默认使用“mysql_native_password”插件认证</span><br><span class="line">#mysql_native_password</span><br><span class="line">default_authentication_plugin=mysql_native_password</span><br><span class="line">[mysql]</span><br><span class="line"># 设置mysql客户端默认字符集</span><br><span class="line">default-character-set=utf8mb4</span><br><span class="line">[client]</span><br><span class="line"># 设置mysql客户端连接服务端时默认使用的端口</span><br><span class="line">port=3306</span><br><span class="line">default-character-set=utf8mb4</span><br></pre></td></tr></table></figure><p><strong>配置文件中的路径要和实际存放的路径一致（8.0.18不要手动创建Data文件夹）</strong></p><p><img src="https://cdn.xycloud.site/iShot2021-02-20%2014.17.26.png"></p><h4 id="初始化MySQL"><a href="#初始化MySQL" class="headerlink" title="初始化MySQL"></a>初始化MySQL</h4><p><strong>在安装时，避免权限问题出错我们尽量使用管理员身份运行CMD，否则在安装时会报错，会导致安装失败的情况</strong></p><p><strong>如果MySQL 服务没有安装在C盘，直接在安装目录进行cmd执行即可</strong></p><ul><li>进入到bin目录</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --initialize --console</span><br></pre></td></tr></table></figure><p><img src="https://cdn.xycloud.site/iShot2021-02-20%2014.21.41.png"></p><ul><li>记住这个随机密码用于登录</li></ul><h4 id="安装MySQL服务-启动MySQL-服务"><a href="#安装MySQL服务-启动MySQL-服务" class="headerlink" title="安装MySQL服务+ 启动MySQL 服务"></a>安装MySQL服务+ 启动MySQL 服务</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --install [服务名]</span><br></pre></td></tr></table></figure><p><strong>如果不写服务名，默认是MySQL</strong></p><p><strong>出现 Service successfully installed.表示安装成功</strong></p><p><strong>MySQL服务安装成功后，启动任务管理器进入服务中右键启动</strong></p><p><strong>启动成功后可使用Navicat 尝试连接</strong></p><h4 id="修改初始密码"><a href="#修改初始密码" class="headerlink" title="修改初始密码"></a>修改初始密码</h4><ul><li>进入bin目录</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p 回车输入密码</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use mysql</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;你的密码&#x27;;</span><br></pre></td></tr></table></figure><ul><li>刷新权限</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><p>/**</p><ul><li>@program: ${PROJECT_NAME}</li><li>@description $description$  </li><li>@author Xu·yan </li><li>@date $date$ $TIME$</li><li>/</li></ul><p>/**</p><ul><li>@Description: $description$</li><li>@Param: $params$</li><li>@return: $returns$</li><li>@Author: Xu·yan</li><li>@Date: $date$</li><li>@Time: $Time$</li><li>/</li></ul>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub 高级搜索</title>
      <link href="2021/06/04/GitHub-%E9%AB%98%E7%BA%A7%E6%90%9C%E7%B4%A2/"/>
      <url>2021/06/04/GitHub-%E9%AB%98%E7%BA%A7%E6%90%9C%E7%B4%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="GitHub-高级搜索"><a href="#GitHub-高级搜索" class="headerlink" title="GitHub 高级搜索"></a>GitHub 高级搜索</h1><p><strong>搜索项目</strong></p><ul><li>以项目名称为例<ul><li>在搜索框输入</li></ul></li></ul><p><img src="https://cdn.xycloud.site/iShot2021-03-06%2014.22.40.png"></p><ul><li>stars数量</li></ul><p><img src="https://cdn.xycloud.site/iShot2021-03-06%2014.24.51.png"></p><ul><li>在readme 中搜索</li></ul><p><img src="https://cdn.xycloud.site/iShot2021-03-06%2014.31.46.png"></p><ul><li>在描述中搜索</li></ul><p><img src="https://cdn.xycloud.site/iShot2021-03-06%2014.35.20.png"></p><ul><li>限定搜索语言或更新时间</li></ul><p><img src="https://cdn.xycloud.site/iShot2021-03-06%2014.39.54.png"></p>]]></content>
      
      
      <categories>
          
          <category> GitHub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos 添加字体</title>
      <link href="2021/06/04/Centos%E6%B7%BB%E5%8A%A0%E5%AD%97%E4%BD%93/"/>
      <url>2021/06/04/Centos%E6%B7%BB%E5%8A%A0%E5%AD%97%E4%BD%93/</url>
      
        <content type="html"><![CDATA[<h1 id="Centos-服务器添加字体"><a href="#Centos-服务器添加字体" class="headerlink" title="Centos 服务器添加字体"></a>Centos 服务器添加字体</h1><ul><li>查看所有字体</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fc-list</span><br></pre></td></tr></table></figure><ul><li>如果没有fc—list 命令，可以进行下载</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y fontconfig mkfontscale</span><br></pre></td></tr></table></figure><ul><li>查看字体</li></ul><p><img src="https://cdn.xycloud.site/iShot2021-05-25%2015.19.56.png"></p><ul><li>在未安装中文字体时是无法显示出中文字体的</li><li>查看自己是否安装了中文字体</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fc-list :lang=zh</span><br></pre></td></tr></table></figure><ul><li>先找到本地字体册，Mac用户Commd + 空格 搜索字体册，找到自己的字体册位置</li></ul><p><img src="https://cdn.xycloud.site/iShot2021-05-25%2015.37.34.png"></p><ul><li>将中文字体册上传至服务器此目录</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/share/fonts</span><br></pre></td></tr></table></figure><ul><li>为字体创建索引</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfontscale</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfontdir</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fc-cache</span><br></pre></td></tr></table></figure><ul><li>重启服务器即可生效</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Centos </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello-world</title>
      <link href="2021/06/03/hello-world/"/>
      <url>2021/06/03/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux-install-vnc</title>
      <link href="2020/06/01/Linux-install-vnc/"/>
      <url>2020/06/01/Linux-install-vnc/</url>
      
        <content type="html"><![CDATA[<h2 id="Linux-Ubuntu-16-04-6-搭建VNC-服务-记录"><a href="#Linux-Ubuntu-16-04-6-搭建VNC-服务-记录" class="headerlink" title="Linux Ubuntu 16.04.6 搭建VNC 服务 记录"></a>Linux Ubuntu 16.04.6 搭建VNC 服务 记录</h2><ul><li><h4 id="00x0-配置环境源"><a href="#00x0-配置环境源" class="headerlink" title="00x0. 配置环境源"></a>00x0. 配置环境源</h4><p>  在安装vnc 之前 ，确保当前环境能够ping通外网IP </p></li><li><h4 id="00x1-备份源文件"><a href="#00x1-备份源文件" class="headerlink" title="00x1.备份源文件"></a>00x1.备份源文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">:sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak</span></span><br></pre></td></tr></table></figure></li><li><h4 id="00x2-编辑源列表文件"><a href="#00x2-编辑源列表文件" class="headerlink" title="00x2.编辑源列表文件"></a>00x2.编辑源列表文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo vim /etc/apt/sources.list</span> </span><br></pre></td></tr></table></figure><p>  将原有内容注释，添加如下内容:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">deb-src http:<span class="comment">//archive.ubuntu.com/ubuntu xenial main restricted #Added by software-properties</span></span><br><span class="line">deb http:<span class="comment">//mirrors.aliyun.com/ubuntu/ xenial main restricted</span></span><br><span class="line">deb-src http:<span class="comment">//mirrors.aliyun.com/ubuntu/ xenial main restricted multiverse universe #Added by software-properties</span></span><br><span class="line">deb http:<span class="comment">//mirrors.aliyun.com/ubuntu/ xenial-updates main restricted</span></span><br><span class="line">deb-src http:<span class="comment">//mirrors.aliyun.com/ubuntu/ xenial-updates main restricted multiverse universe #Added by software-properties</span></span><br><span class="line">deb http:<span class="comment">//mirrors.aliyun.com/ubuntu/ xenial universe</span></span><br><span class="line">deb http:<span class="comment">//mirrors.aliyun.com/ubuntu/ xenial-updates universe</span></span><br><span class="line">deb http:<span class="comment">//mirrors.aliyun.com/ubuntu/ xenial multiverse</span></span><br><span class="line">deb http:<span class="comment">//mirrors.aliyun.com/ubuntu/ xenial-updates multiverse</span></span><br><span class="line">deb http:<span class="comment">//mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse</span></span><br><span class="line">deb-src http:<span class="comment">//mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse #Added by software-properties</span></span><br><span class="line">deb http:<span class="comment">//archive.canonical.com/ubuntu xenial partner</span></span><br><span class="line">deb-src http:<span class="comment">//archive.canonical.com/ubuntu xenial partner</span></span><br><span class="line">deb http:<span class="comment">//mirrors.aliyun.com/ubuntu/ xenial-security main restricted</span></span><br><span class="line">deb-src http:<span class="comment">//mirrors.aliyun.com/ubuntu/ xenial-security main restricted multiverse universe #Added by software-properties</span></span><br><span class="line">deb http:<span class="comment">//mirrors.aliyun.com/ubuntu/ xenial-security universe</span></span><br><span class="line">deb http:<span class="comment">//mirrors.aliyun.com/ubuntu/ xenial-security multiverse</span></span><br></pre></td></tr></table></figure></li><li><h4 id="00x3-更新软件列表"><a href="#00x3-更新软件列表" class="headerlink" title="00x3.更新软件列表"></a>00x3.更新软件列表</h4><p>  源文件配置完成后，运行如下命令进行更新列表</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">:sudo apt-get update</span></span><br></pre></td></tr></table></figure><p>  更新软件包：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">:sudo apt-get upgrade</span></span><br></pre></td></tr></table></figure></li><li><h4 id="00x4-重启网络，完成配置"><a href="#00x4-重启网络，完成配置" class="headerlink" title="00x4.重启网络，完成配置"></a>00x4.重启网络，完成配置</h4>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">:sudo service network-manager restart</span></span><br></pre></td></tr></table></figure><p>  tips : 重启网络后可尝试ping baidu.com 进行测试</p></li><li><h4 id="00x5-VNC-安装准备工作"><a href="#00x5-VNC-安装准备工作" class="headerlink" title="00x5.VNC 安装准备工作"></a>00x5.VNC 安装准备工作</h4><ul><li><p>安装vnc 服务端 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">sudo apt-get install vnc4server</span></span><br></pre></td></tr></table></figure></li><li><p>00x5.1 -安装桌面环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">:sudo apt-get install --no-install-recommends ubuntu-desktop gnome-panel gnome-settings-daemon metacity nautilus gnome-terminal -y</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">:sudo apt-get install vnc4server -y</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">:ssh -L 5901:127.0.0.1:5901 &lt;username&gt;@&lt;host&gt; -p &lt;port&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vncserver :1</span></span><br></pre></td></tr></table></figure></li><li><p>安装完成，第一次启动vncserver 需要设置登录密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$:vncserver</span><br></pre></td></tr></table></figure></li></ul></li></ul><p>管理员</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">You will require a password to access yourdesktops.</span><br><span class="line"></span><br><span class="line">Password: 123456    #输入vnc 连接密码</span><br><span class="line">Verify: 123456      #确认vnc密码</span><br><span class="line"></span><br><span class="line">xauth: creating new authority file/root/.Xauthority</span><br><span class="line">New &#x27;localhost.localdomain:1 (root)’desktop is localhost.localdomain:1</span><br><span class="line">Creating default startup script/root/.vnc/xstartup</span><br><span class="line">Starting applications specified in/root/.vnc/xstartup</span><br><span class="line">Log file is/root/.vnc/localhost.localdomain:1.log</span><br></pre></td></tr></table></figure><p>普通用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">su leo        #leo 是用户名</span><br><span class="line">vncserver</span><br><span class="line"></span><br><span class="line">You will require a password to access yourdesktops.</span><br><span class="line"></span><br><span class="line">Password: 123456    #输入vnc 连接密码</span><br><span class="line">Verify: 123456      #确认vnc密码</span><br><span class="line"></span><br><span class="line">xauth: creating new authority file /home/leo/.Xauthority</span><br><span class="line">New &#x27;localhost.localdomain:2 (leo)’ desktopis localhost.localdomain:2</span><br><span class="line">Creating default startup script /home/leo/.vnc/xstartup</span><br><span class="line">Starting applications specified in /home/leo/.vnc/xstartup</span><br><span class="line">Log file is /home/leo/.vnc/localhost.localdomain:2.log</span><br></pre></td></tr></table></figure><ul><li><h4 id="00x6-修改VNC-配置"><a href="#00x6-修改VNC-配置" class="headerlink" title="00x6.修改VNC 配置"></a>00x6.修改VNC 配置</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">which</span> vncserver</span> </span><br></pre></td></tr></table></figure></li></ul><p><img src="https://cdn.xycloud.site/image-20200801123802365.png"></p><p>  查找vnc配置文件</p>   <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> file  /usr/bin/vncservcer</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.xycloud.site/image-20200801123720515.png" alt="image-20200801123720515"></p><ul><li><p>继续file 上面圈出的地方<br> <img src="https://cdn.xycloud.site/image-20200801125025020.png" alt="image-20200801125025020"></p></li><li><p>再次 file 上面圈出的地方<br> <img src="https://cdn.xycloud.site/image-20200801125731572.png" alt="image-20200801125731572"></p></li><li><p>输入 grep “59”  /usr/bin/vnc4server - n 查找59端口</p></li></ul><p>  <img src="https://cdn.xycloud.site/image-20200801130935304.png" alt="image-20200801130935304"></p><ul><li><p>可以看到我的 vncPort  在212行， 对应的468 也是59 端口</p></li><li><p>进行编辑端口- 找到对应的59 端口，将其修改为其它端口即可</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo vi /usr/bin/vnc4server</span> </span><br></pre></td></tr></table></figure></li><li><p>我修改的是6666</p></li></ul><p> <img src="https://cdn.xycloud.site/image-20200801131458801.png" alt="image-20200801131458801"></p><ul><li>重启vnc 服务 </li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vncserver -<span class="built_in">kill</span> :1</span></span><br></pre></td></tr></table></figure> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vncserver :1</span></span><br></pre></td></tr></table></figure><ul><li><p>vncserver :1 的意思是在端口上面加1，并进行启动，所以我的端口此时连接为6667</p></li><li><p>使用vnc软件进行连接</p></li></ul><p> <img src="https://cdn.xycloud.site/image-20200801131939363.png" alt="image-20200801131939363"></p><ul><li>此时连接后，桌面可能是灰屏，需要安装桌面环境，前面已经安装了，但是需要再次进行生效</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install x-window-system-core</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.xycloud.site/image-20200801132130757.png" alt="image-20200801132130757"></p><ul><li><p>出现上图，则表示你已经安装了最新的版本</p></li><li><p>安装桌面登录管理器</p></li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install gdm</span></span><br></pre></td></tr></table></figure><p>  <img src="https://cdn.xycloud.site/image-20200801132305192.png" alt="image-20200801132305192"></p><ul><li><p>出现上图，则表示已经安装了最新版本</p></li><li><p>安装gnome 配套设施</p></li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install gnome-panel gnome-settings-daemon metacity nautilus gnome-terminal</span></span><br></pre></td></tr></table></figure><ul><li>修改vnc 配置</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Uncomment the following two lines <span class="keyword">for</span> normal desktop:</span></span><br><span class="line">export XKL_XMODMAP_DISABLE=1</span><br><span class="line">unset SESSION_MANAGER</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">exec</span> /etc/X11/xinit/xinitrc</span></span><br><span class="line">unset DBUS_SESSION_BUS_ADDRESS</span><br><span class="line">gnome-panel &amp;</span><br><span class="line">gnome-settings-daemon &amp;</span><br><span class="line">metacity &amp;</span><br><span class="line">nautilus &amp;</span><br><span class="line">gnome-terminal &amp;</span><br></pre></td></tr></table></figure><ul><li>重启VNC </li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vncserver -<span class="built_in">kill</span> :1</span> </span><br></pre></td></tr></table></figure>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vncserver :1</span></span><br></pre></td></tr></table></figure><ul><li><p>再次使用vnc 连接，熟悉的紫色又回来了</p></li><li><p><img src="https://cdn.xycloud.site/image-20200801132658566.png" alt="image-20200801132658566"></p></li><li><p>安装EasyConnect 选择合适的版本</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://mirrors.sdwu.edu.cn/easyconnect/</span><br></pre></td></tr></table></figure><ul><li><p>将安装包放置任意目录-</p></li><li><p>进入目录执行以下命令</p></li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo dpkg -i EasyConnect_x64_7_6_7_3.deb</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 默认安装位置/usr/share/sangfor/EasyConnect/EasyConnect</span></span><br></pre></td></tr></table></figure><ul><li>运行EasyConnect</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> /usr/share/sangfor/EasyConnect/EasyConnect</span></span><br><span class="line">./EasyConnect</span><br></pre></td></tr></table></figure><ul><li>安装完成的EasyConnect  在Ubuntu 双击是打不开的，执行以上命令会有错误提示</li></ul><p><img src="https://cdn.xycloud.site/image-20200801133306054.png" alt="image-20200801133306054"></p><ul><li>输入以下命令进行修改</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> /usr/lib/x86_64-linux-gnu/</span></span><br></pre></td></tr></table></figure>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cp /usr/lib/x86_64-linux-gnu/libxcb.so.1 libxcb.so.1.bk</span></span><br></pre></td></tr></table></figure>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo sed -i <span class="string">&#x27;s/BIG-REQUESTS/_IG-REQUESTS/&#x27;</span> libxcb.so.1</span></span><br></pre></td></tr></table></figure>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> /usr/share/sangfor/EasyConnect/EasyConnect/EasyConnect</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.xycloud.site/image-20200801133602576.png" alt="image-20200801133602576"></p><ul><li>出现三行display “：1” 表示修改完成</li></ul><p><img src="https://cdn.xycloud.site/image-20200801133909767.png" alt="image-20200801133909767"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Build</title>
      <link href="2020/05/01/hexo-blog/"/>
      <url>2020/05/01/hexo-blog/</url>
      
        <content type="html"><![CDATA[<h1 id="如何快速搭建个人博客？"><a href="#如何快速搭建个人博客？" class="headerlink" title="如何快速搭建个人博客？"></a><a href="https://hexo.io/zh-cn/docs/">如何快速搭建个人博客？</a></h1><h3 id="Hexo-安装"><a href="#Hexo-安装" class="headerlink" title="Hexo 安装"></a>Hexo 安装</h3><ul><li><a href="http://nodejs.org/">Node.js</a> (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)</li><li><a href="http://git-scm.com/">Git</a></li></ul><h3 id="全局安装Hexo"><a href="#全局安装Hexo" class="headerlink" title="全局安装Hexo"></a>全局安装Hexo</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo cli</span><br></pre></td></tr></table></figure><h3 id="局部安装Hexo"><a href="#局部安装Hexo" class="headerlink" title="局部安装Hexo"></a>局部安装Hexo</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo</span><br></pre></td></tr></table></figure><h3 id="安装验证"><a href="#安装验证" class="headerlink" title="安装验证"></a>安装验证</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><h3 id="初始化Hexo"><a href="#初始化Hexo" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry http://registry.npm.taobao.org <span class="comment"># 设置npm 国内源</span></span><br></pre></td></tr></table></figure><ul><li>没有GitHub 加速的可以直接clone hexo -starter </li><li><a href="https://github.com/hexojs/hexo-starter/">https://github.com/hexojs/hexo-starter/</a></li></ul><p><img src="https://cdn.xycloud.site/iShot2021-11-06%2001.04.04.png"></p><h3 id="初始化的目录"><a href="#初始化的目录" class="headerlink" title="初始化的目录"></a>初始化的目录</h3><p><img src="https://cdn.xycloud.site/iShot2021-11-06%2001.06.38.png"></p><ul><li>_config_yml   -&gt; hexo核心配置文件(主要是主题修改)</li><li>Package.json -&gt; 一些项目的信息</li><li>Source  -&gt; 源目录:主要存放博客日记</li><li>Themes -&gt; 存放主题</li></ul><h3 id="主题的选择"><a href="#主题的选择" class="headerlink" title="主题的选择"></a>主题的选择</h3><p><a href="https://hexo.io/themes/">https://hexo.io/themes/</a></p><p><img src="https://cdn.xycloud.site/iShot2021-11-06%2001.12.37.png"></p><ul><li>下载主题压缩包</li><li>将主题压缩包拷贝至themes目录</li><li>更换_config.yml -&gt; theme:[主题目录名称]</li></ul><p><img src="https://cdn.xycloud.site/iShot2021-11-06%2001.15.37.png"></p><h3 id="主题生成"><a href="#主题生成" class="headerlink" title="主题生成"></a>主题生成</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g <span class="comment">#主题生成</span></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s <span class="comment">#主题启动</span></span><br></pre></td></tr></table></figure><h3 id="主题上传"><a href="#主题上传" class="headerlink" title="主题上传"></a>主题上传</h3><ul><li><p>Gitee 新建一个仓库</p><p><img src="https://cdn.xycloud.site/iShot2021-11-06%2001.18.52.png"></p></li><li><p>修改主题HTTP push 链接</p><p><img src="https://cdn.xycloud.site/iShot2021-11-06%2001.19.37.png"></p><p><img src="https://cdn.xycloud.site/iShot2021-11-06%2001.20.45.png"></p></li></ul><h3 id="下载插件完成上传"><a href="#下载插件完成上传" class="headerlink" title="下载插件完成上传"></a>下载插件完成上传</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save   <span class="comment">#把public里面生成的文件推上到码云上</span></span><br></pre></td></tr></table></figure><h3 id="执行上传命令"><a href="#执行上传命令" class="headerlink" title="执行上传命令"></a>执行上传命令</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><h3 id="查看Gitee-Pages"><a href="#查看Gitee-Pages" class="headerlink" title="查看Gitee Pages"></a>查看Gitee Pages</h3><h3 id="GitHub-Pages"><a href="#GitHub-Pages" class="headerlink" title="GitHub Pages"></a>GitHub Pages</h3><ul><li><p>新建仓库-&gt; 必须以.github.io 结尾</p><p><img src="https://cdn.xycloud.site/iShot2021-11-06%2001.48.33.png"></p></li><li><p>点击设置 -&gt; 查看GitHub Pages </p><p><img src="https://cdn.xycloud.site/iShot2021-11-06%2001.49.31.png"></p></li><li><p>进入 GitHup Pages</p><p><img src="https://cdn.xycloud.site/iShot2021-11-06%2001.49.44.png"></p></li><li><p>默认主题选择</p><p><img src="https://cdn.xycloud.site/iShot2021-11-06%2001.50.27.png"></p></li></ul><h3 id="Github-Pages的分类及区别"><a href="#Github-Pages的分类及区别" class="headerlink" title="Github Pages的分类及区别"></a>Github Pages的分类及区别</h3><p>总共分为两类：个人、组织主页以及项目主页，本质无区别，有以下几点不同</p><ul><li><p>个人主页必须和用户名的GitHub账号同名，每个用户只能有一个repo作为个人主页，且必须是</p><p><username>/<username>.github.io 形式</p></li><li><p>不考虑绑定自定义域名前提下，个人主页的GitHub二级域名为<username>.github.io 项目主页的GitHub</p><p>二级域名为<username>.github.io<projectname> 没有<projectname>.</p></li><li><p>个人主页的展示内容以master 分支文件为准；而项目主页的展示内容以gh-pages分支内的文件为准</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
